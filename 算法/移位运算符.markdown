# 移位运算符
* << (左移:高位舍弃,低位补0)
* &#62;&#62; (右移:低位舍弃,高位补符号位)
* &#62;&#62;&#62;(无符号右移)  
无论正负,高位都补0,低位舍弃.因为高位补0,所以负数会变得很大.

[原码,补码,反码详解](https://blog.csdn.net/engerla/article/details/90056186)  
* 负数在计算机中是用补码显示的
* 反码:除符号位,每位都取反
* 补码的两种表示方法
    1. 正数的原码反码和补码都一样,负数的补码是反码+1 
    2. 负数的补码,自低位向高位,碰到第一个'1'及右边的0不变,左边的都取反
* 负数的补码转十进制  
取反,转十进制,加负号,再-1
