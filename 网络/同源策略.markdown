# 同源策略
* 同源是指协议,域名,端口相同.  
浏览器处于安全方面,只允许本域名下的接口交互,不同源的客户端脚本在没有授权的情况下是不能访问对方的资源的.

* 同源策略分为两种
    1. DOM同源策略: 禁止不同源页面DOM进行操作,防止不同域的iframe之间可以相互访问
    2. LHttpRequest同源策略:禁止使用XHR对象向不同源的服务器进行访问.防止csrf攻击
* 跨域解决方法
    1. CORS跨域资源共享
    2. jsonp跨域

* 跨域
    * 跨域访问资源
        * 带有src属性的资源都允许被跨域访问
        * 带有href属性的资源大部分允许被跨域访问
    * 哪些是跨域请求的资源
        1. 后端接口的数据
        2. 其他域的cookie
        3. 其他域的缓存
    * 怎么算跨域
        * 协议，域名，端口号，三者有一个不一样的就算跨域
    * 跨域这个行为发生在哪里
        1. 即使跨域了也可以发出请求
        2. 服务器端也可以接受
        3. 服务器端可以正常处理
        4. 服务器端正常返回数据
        5. 浏览器可以正常接受数据
        6. 接收到之后，浏览器发现当面页面的域和请求的域不同，判定为跨域  
    * 虽然跨域了，但是我们依然需要这个数据怎么办
        * 后端配合我们进行跨域
            1. jsonp（正常的情况下，返回的数据都是json格式）
            2. 后端设置Acess-Control—Allow-Origin属性以支持跨域
        * 后端不配合跨域
            1. iframe（只能显示，不能控制）
            2. 通过后端代理