#  数据类型转化
## == 和 === 区别   
* == 会先检查两边的数据类型是否相同  
    1. 如果两个值类型相同，再进行三个等号(===)的比较
    2. 如果两个值类型不同，也有可能相等，需根据以下规则进行类型转换在比较：
        1. 如果一个是null，一个是undefined，那么相等
        2. 如果一个是字符串，一个是数值，把字符串转换成数值之后再进行比较 
        3. boolean和其他类型的值比较的时候,boolean会转换给number后再做比较
    (NaN和任何值都不相等)
    (undefined和null 跟任何有价值的值比较都是返回false)
* === 直接严格比较
## 强制类型转换
* Boolean()  
    1. true:至少有一个字符的字符串, 非零数字,对象,  
    2. false:空串,0,undefined ,null ,NaN
     没有内容就是undefined,这个就是false
     0就是false,1是true
     null跟undefined一样,都是false
     字符串里面有内容的话才是true,没有内容就是false
     NaN是一种数值类型,已经是false了,只是为了让程序继续往下面走

* Number()  
    1. NaN: 对象,undefined,整个字符串不能转换为数字的.  
    比如
    "1.2.3"  
    number()   返回NaN  
    parseInt()  返回1   
    parsefloat() 返回1.2  这俩个都是只转换第一个无效字符之前的字符串
    
    2. 0: null ,false

* String()  
任何值都能转换为字符串  
但是null和undefin没有String()方法,  
null.String() 会报错  

详细转 https://justjavac.com/javascript/2012/12/20/object-plus-object.html
## 强制类型转换
<!-- * 转换为string 
方式一: 调用xxx的yyy方法,就是xxx.yyy()
var a = 123;
a.toString();
console.log(a); 结果:123
该方法不会影响原来的变量,会将转换的结果返回,var b = a.toString();
console.log(b);// 结果: " 123 "
**null和undefined** 两个值没有toString方法
方式二:调用String()函数,将转换的数据作为参数传给函数
var a = 123 ;
a = string(a);
console.log(a);// "123"
使用String()函数做强制类型转化时,对于number和boolean实际上就是调用的toString()方法,
转换为Number：
方式一：使用Number()函数
              var  a="123";
              a=Number(a);
              console.log(typeof  a);     结果：number
    如果：
            var  a="abc";
           a=Number(a);
           console.log(a);    结果：NaN
如果是纯数字的字符串，则直接转换为数字，如果字符串中有非数字的内容，则转换为NaN,如果字符串是一个空串或者是一个全是空格的字符串，则转换为0；
Number(true)="1"     Number(Null)=0   Number(undefined)="NaN"
方式二：parseInt()   parseFloat()   专门用来对付字符串

           var  a = "123px";
            a=parseInt(a);
           console.log(typeof a);    结果：number
           console.log(a);               结果：123 
          var b=true;
           b=parseInt(b);
           console.log(typeof b);    结果：number
           console.log(b);               结果：NaN
如果对非string使用parseInt()或parseFloat()它会先将其转换为string，然后再操作。

转换为Boolean：
使用Boolean()函数
        var a= 123;
        a=Boolean(a);
       console.log(typeof a);   结果：boolean
       console.log(a);              结果：true
除了0、NaN、空串、null、undefined其余都是true。对象也会转换为true -->

